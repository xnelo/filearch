/*
 * This file is generated by jOOQ.
 */
package com.xnelo.filearch.jooq.tables.pojos;


import java.io.Serializable;
import java.util.Arrays;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class StoredFiles implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final Long ownerUserId;
    private final String storageType;
    private final String storageKey;
    private final byte[] originalFilename;

    public StoredFiles(StoredFiles value) {
        this.id = value.id;
        this.ownerUserId = value.ownerUserId;
        this.storageType = value.storageType;
        this.storageKey = value.storageKey;
        this.originalFilename = value.originalFilename;
    }

    public StoredFiles(
        Long id,
        Long ownerUserId,
        String storageType,
        String storageKey,
        byte[] originalFilename
    ) {
        this.id = id;
        this.ownerUserId = ownerUserId;
        this.storageType = storageType;
        this.storageKey = storageKey;
        this.originalFilename = originalFilename;
    }

    /**
     * Getter for <code>FILEARCH.stored_files.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>FILEARCH.stored_files.owner_user_id</code>.
     */
    public Long getOwnerUserId() {
        return this.ownerUserId;
    }

    /**
     * Getter for <code>FILEARCH.stored_files.storage_type</code>.
     */
    public String getStorageType() {
        return this.storageType;
    }

    /**
     * Getter for <code>FILEARCH.stored_files.storage_key</code>.
     */
    public String getStorageKey() {
        return this.storageKey;
    }

    /**
     * Getter for <code>FILEARCH.stored_files.original_filename</code>.
     */
    public byte[] getOriginalFilename() {
        return this.originalFilename;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final StoredFiles other = (StoredFiles) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.ownerUserId == null) {
            if (other.ownerUserId != null)
                return false;
        }
        else if (!this.ownerUserId.equals(other.ownerUserId))
            return false;
        if (this.storageType == null) {
            if (other.storageType != null)
                return false;
        }
        else if (!this.storageType.equals(other.storageType))
            return false;
        if (this.storageKey == null) {
            if (other.storageKey != null)
                return false;
        }
        else if (!this.storageKey.equals(other.storageKey))
            return false;
        if (this.originalFilename == null) {
            if (other.originalFilename != null)
                return false;
        }
        else if (!Arrays.equals(this.originalFilename, other.originalFilename))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.ownerUserId == null) ? 0 : this.ownerUserId.hashCode());
        result = prime * result + ((this.storageType == null) ? 0 : this.storageType.hashCode());
        result = prime * result + ((this.storageKey == null) ? 0 : this.storageKey.hashCode());
        result = prime * result + ((this.originalFilename == null) ? 0 : Arrays.hashCode(this.originalFilename));
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("StoredFiles (");

        sb.append(id);
        sb.append(", ").append(ownerUserId);
        sb.append(", ").append(storageType);
        sb.append(", ").append(storageKey);
        sb.append(", ").append("[binary...]");

        sb.append(")");
        return sb.toString();
    }
}
