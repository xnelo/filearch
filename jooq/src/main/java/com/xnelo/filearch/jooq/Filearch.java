/*
 * This file is generated by jOOQ.
 */
package com.xnelo.filearch.jooq;

import com.xnelo.filearch.jooq.tables.FlywaySchemaHistory;
import com.xnelo.filearch.jooq.tables.TestTable;
import java.util.Arrays;
import java.util.List;
import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.DSL;
import org.jooq.impl.SchemaImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class Filearch extends SchemaImpl {

  private static final long serialVersionUID = 1L;

  /** The reference instance of <code>FILEARCH</code> */
  public static final Filearch FILEARCH = new Filearch();

  /** The table <code>FILEARCH.flyway_schema_history</code>. */
  public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY =
      FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

  /** The table <code>FILEARCH.test_table</code>. */
  public final TestTable TEST_TABLE = TestTable.TEST_TABLE;

  /** No further instances allowed */
  private Filearch() {
    super(DSL.name("FILEARCH"), null, DSL.comment(""));
  }

  @Override
  public Catalog getCatalog() {
    return DefaultCatalog.DEFAULT_CATALOG;
  }

  @Override
  public final List<Sequence<?>> getSequences() {
    return Arrays.asList(Sequences.SEQ_FILE_UPLOAD_NUMBER);
  }

  @Override
  public final List<Table<?>> getTables() {
    return Arrays.asList(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, TestTable.TEST_TABLE);
  }
}
