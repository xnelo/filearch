/*
 * This file is generated by jOOQ.
 */
package com.xnelo.filearch.jooq.tables.pojos;


import java.io.Serializable;
import java.util.Arrays;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Folders implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final Long ownerUserId;
    private final Long parentId;
    private final byte[] name;

    public Folders(Folders value) {
        this.id = value.id;
        this.ownerUserId = value.ownerUserId;
        this.parentId = value.parentId;
        this.name = value.name;
    }

    public Folders(
        Long id,
        Long ownerUserId,
        Long parentId,
        byte[] name
    ) {
        this.id = id;
        this.ownerUserId = ownerUserId;
        this.parentId = parentId;
        this.name = name;
    }

    /**
     * Getter for <code>FILEARCH.folders.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>FILEARCH.folders.owner_user_id</code>.
     */
    public Long getOwnerUserId() {
        return this.ownerUserId;
    }

    /**
     * Getter for <code>FILEARCH.folders.parent_id</code>.
     */
    public Long getParentId() {
        return this.parentId;
    }

    /**
     * Getter for <code>FILEARCH.folders.name</code>.
     */
    public byte[] getName() {
        return this.name;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Folders other = (Folders) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.ownerUserId == null) {
            if (other.ownerUserId != null)
                return false;
        }
        else if (!this.ownerUserId.equals(other.ownerUserId))
            return false;
        if (this.parentId == null) {
            if (other.parentId != null)
                return false;
        }
        else if (!this.parentId.equals(other.parentId))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!Arrays.equals(this.name, other.name))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.ownerUserId == null) ? 0 : this.ownerUserId.hashCode());
        result = prime * result + ((this.parentId == null) ? 0 : this.parentId.hashCode());
        result = prime * result + ((this.name == null) ? 0 : Arrays.hashCode(this.name));
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Folders (");

        sb.append(id);
        sb.append(", ").append(ownerUserId);
        sb.append(", ").append(parentId);
        sb.append(", ").append("[binary...]");

        sb.append(")");
        return sb.toString();
    }
}
